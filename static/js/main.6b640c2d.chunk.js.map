{"version":3,"sources":["App.js","js/functions/schedule.js","reportWebVitals.js","index.js"],"names":["App","React","useState","flights","setFlights","className","type","title","onClick","fetch","then","response","json","DD","Date","getDate","MM","getMonth","date","getFullYear","events","j","Object","keys","vcalendar","vevent","forEach","data","i","dtstart","substr","summary","flightNumber","origin","destination","push","console","log","catch","err","results","value","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA2FeA,MAtFf,WAEE,MAA8BC,IAAMC,SAAS,CAC3C,CAAC,GAAO,EAAG,aAAiB,SAAU,OAAU,MAAO,YAAe,OACtE,CAAC,GAAO,EAAG,aAAiB,SAAU,OAAU,MAAO,YAAe,SAFxE,mBAAOC,EAAP,KAAgBC,EAAhB,KA+BA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yCAEA,wBAAQC,KAAK,SACXC,MAAM,qBACNC,QAhCR,WCgBOC,MAAM,4BAA4BC,MAAK,SAAAC,GAE5C,OAAOA,EAASC,UACfF,MAAK,SAAAC,GAEN,IAAIE,GAAK,IAAIC,MAAOC,UAChBF,EAAK,KACPA,EAAK,IAAMA,GAEb,IAAIG,GAAK,IAAIF,MAAOG,WAAa,EAC7BD,EAAK,KACPA,EAAK,IAAMA,GAEb,IACIE,EAAO,IADF,IAAIJ,MAAOK,cACCH,EAAKH,EAItBO,EAAS,GACTC,EAAI,EAgDR,OA/CAC,OAAOC,KAAKZ,EAASa,UAAU,GAAGC,QAAQC,SAAQ,SAASC,EAAMC,GAW/D,GAAGV,IAASP,EAASa,UAAU,GAAGC,OAAOG,GAAGC,QAAQC,OAAO,EAAE,IAA8D,OAAxDnB,EAASa,UAAU,GAAGC,OAAOG,GAAGG,QAAQD,OAAO,EAAE,GAAY,CAM9H,IAAIE,EAAerB,EAASa,UAAU,GAAGC,OAAOG,GAAGG,QAAQD,OAAO,EAAE,GAChEG,EAAStB,EAASa,UAAU,GAAGC,OAAOG,GAAGG,QAAQD,OAAO,EAAE,GAC1DI,EAAcvB,EAASa,UAAU,GAAGC,OAAOG,GAAGG,QAAQD,OAAO,GAAG,GAEpEV,EAAOe,KAAK,CACV,GAAOd,EACP,aAAiBW,EACjB,OAAWC,EACX,YAAgBC,IAElBb,QAKJe,QAAQC,IAAIjB,GAeLA,KACNkB,OAAM,SAAAC,GACPH,QAAQC,IAAIE,MDpFF7B,MAAM,SAAA8B,GACdpC,EAAWoC,OA+BPC,MAAOtC,EAHT,iCAOA,sBAEA,wBAAQG,KAAK,SACXC,MAAM,WACNC,QA/BR,WACE4B,QAAQC,IAAIlC,GACZiC,QAAQC,IAAIlC,EAAQ,GAAGuC,IACvBN,QAAQC,IAAIlC,EAAQ,GAAG6B,cACvBI,QAAQC,IAAIlC,EAAQ,GAAGuC,IACvBN,QAAQC,IAAIlC,EAAQ,GAAG6B,eAwBnB,yBAMA,8CAEA,6BEhDOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6b640c2d.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport getICSP from './js/functions/schedule';\nimport getFlightData from './js/functions/getFlightData';\n\nfunction App() {\n\n  const [flights, setFlights] = React.useState([\n    {'id' : 0, 'flightNumber' : 'KL1501', 'origin': 'AMS', 'destination': 'VLC'},\n    {'id' : 1, 'flightNumber' : 'KL1503', 'origin': 'AMS', 'destination': 'VLC'}\n  ]);\n\n\n  function getFlights() {\n    getICSP().then( results => {\n      setFlights(results);\n    });\n  }\n\n  function getData(flight) {\n    getFlightData(flight);\n  }\n\n  function logFlights(){\n    console.log(flights);\n    console.log(flights[0].id);\n    console.log(flights[0].flightNumber);\n    console.log(flights[1].id);\n    console.log(flights[1].flightNumber);\n/*\n    return fetch('http://localhost:5000/getData').then(response => {\n      return response.json();\n    }).then(response => {\n      console.log(response);\n    });\n*/\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Logboek</h1>\n\n        <button type=\"button\"\n          title='vluchtdata ophalen'\n          onClick={getFlights}\n          value={flights}\n        >Vluchtdata ophalen!\n        </button>\n\n        <p/>\n\n        <button type=\"button\"\n          title='flights?'\n          onClick={logFlights}\n        >log flights\n        </button>\n\n        <p>Flight List: </p>\n\n        <ul>\n        {/*flights.map(item => (\n        <li key={item.id}>\n        <button type=\"button\"\n          title={item.flightNumber}\n          onClick={getData.bind(this, item.flightNumber)}>\n          {item.flightNumber} {item.origin} - {item.destination}\n        </button>\n        </li>\n      ))*/}\n        </ul>\n\n\n      </header>\n    </div>\n\n  );\n}\n/*\n<ul>\n{flights.map(item => (\n  /*<button type=\"button\"\n  title='index'\n  onClick={getFlightData(item)}\n>{item}\n</button>*//*\n<li key={item}>{item}</li>\n))}\n</ul>*/\n// {item.flightNumber} {item.origin} - {item.destination}\n\nexport default App;\n","//import convert from './IcsConverter';\n\n\nexport default function getICSP() {\n  /*\n  return fetch(\n    //'https://klc-rooster.nl/79dff3d4d99e4c83fff5fc4d4bf114eb.ics'\n    '../../json/rooster-15mei21.json'\n  )\n    .then(response => {\n      return response.json();\n    })\n\n    //.then(response => response.json())\n\n    .then(response => {\n      console.log(response);\n      var output = convert(response);\n      console.log('we zijn hier aangekomen');\n      console.log(output);\n\n    })\n    .catch(err => {\n      console.log(err);\n    });\n    */\n\n\n    // Replace ./data.json with your JSON feed\n  return fetch('./rooster-voorbeeld.json').then(response => {\n    //console.log(response);\n    return response.json();\n  }).then(response => {\n\n    var DD = new Date().getDate();\n    if (DD < 10) {\n      DD = '0' + DD;\n    }\n    var MM = new Date().getMonth() + 1;\n    if (MM < 10) {\n      MM = '0' + MM;\n    }\n    var YY = new Date().getFullYear();\n    var date = '' + YY + MM + DD;\n    //var date = '20210621';\n    //console.log(date);\n\n    var events = [];\n    var j = 0;\n    Object.keys(response.vcalendar[0].vevent).forEach(function(data, i) {\n      /*\n      console.log(index);\n      console.log(data);\n      console.log(index.summary);\n      console.log([index].summary);\n\n      console.log('summary: ' + response.vcalendar[0].vevent[index].summary);\n      console.log('dtstart: ' + response.vcalendar[0].vevent[index].dtstart.substr(0,8));\n      */\n      //check of var 'date' gelijk is aan datum uit het 'event' in de json file en of de summary 'KL' bevat, anders krijg je ook het 'Flight day' event mee.\n      if(date === response.vcalendar[0].vevent[i].dtstart.substr(0,8) && response.vcalendar[0].vevent[i].summary.substr(0,2) === \"KL\"){\n        /*\n        console.log('summary: ' + response.vcalendar[0].vevent[i].summary);\n        console.log('dtstart: ' + response.vcalendar[0].vevent[i].dtstart.substr(0,8));\n        console.log('!VANDAAG!');\n        */\n        var flightNumber = response.vcalendar[0].vevent[i].summary.substr(0,6);\n        var origin = response.vcalendar[0].vevent[i].summary.substr(7,3);\n        var destination = response.vcalendar[0].vevent[i].summary.substr(11,3);\n\n        events.push({\n          \"id\" : j,\n          \"flightNumber\" : flightNumber,\n          \"origin\" : origin,\n          \"destination\" : destination\n        });\n        j++;\n      }\n\n    })\n\n    console.log(events);\n\n    //props.onchange\n\n    /*\n    .then(function(response) {\n        var names=[];\n        Object.keys(response.data).forEach(function(data) {\n             names.push(data.Name);\n        })\n        self.setState({\n            jdata: names\n        });\n    })\n    */\n    return events;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}